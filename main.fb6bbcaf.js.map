{"version":3,"sources":["js/ConnectFour.js","js/main.js","../node_modules/parcel/src/builtins/bundle-url.js","../node_modules/parcel/src/builtins/css-loader.js"],"names":["ConnectFour","selector","gameOver","playerTurn","cellOwners","lastMove","updateTime","colourRed","colourYellow","colourBlue","colourBlank","rows","columns","connect","canvas","document","getElementById","width","scrollWidth","height","scrollHeight","cellWidth","cellHeight","radius","radiusSemi","ctx","getContext","initialise","addEventListener","click","bind","mouseMove","rowsArray","i","j","push","drawGrid","event","cell","getCell","offsetX","offsetY","drawCell","Date","now","semiCircle","centerX","centerY","fillStyle","beginPath","arc","Math","PI","fill","x","y","trunc","checkCell","roundRect","stroke","tl","tr","br","bl","defaultRadius","side","moveTo","lineTo","quadraticCurveTo","closePath","console","log","connectFour","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","length","module"],"mappings":"AEAA,ACAA,IDAIyE,ACAAY,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;;ADCA,ACCA,AFAA,SCDSZ,ACCAa,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,MDDI,ACCAC,CDDChB,MCCM,GDDX,ACCce,EDDE,ECCE,CAACE,SAAL,EAAd;ADAEjB,ADAJ,ICAIA,SAAS,GAAGE,YAAY,EAAxB;AACD,ACADc,EAAAA,OAAO,CAACE,MAAR,GAAiB,YAAY;AAC3BH,AFLJlB,IEKIkB,GFLG,CEKC,AFLAjB,CEKCqB,EFLT,CAAY,GEKR,MFLJ;ACME,ACAC,AFAH,GEFE,CFEIpB,KCAGC,MDAQ,GCAf,ADAkB,IAAIzE,wBAAJ,CAAgB,cAAhB,CAApB;ACCC;ACACyF,EAAAA,OAAO,CAACI,IAAR,GAAeL,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,IAA0B,GAA1B,GAAgCnD,IAAI,CAACC,GAAL,EAA/C;ADEF,ACDE4C,EAAAA,IAAI,CAACO,EDCEpB,QCDP,CAAgBqB,GDClB,GAAwB,MCDtB,CAA6BP,OAA7B,EAAsCD,IAAI,CAACS,WAA3C;ADEA,ACDD;ADEC,MAAI;AACF,ACDJ,IAAIC,AHXSlG,MEYH,IAAI4E,ACDA,GAAG,EDCP,EAAN,ACDJ;ADEG,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,ACFJ,QDEQC,CCFCqB,MDEM,GAAG,ACFlB,CDEmB,ECFE,GDEGtB,GAAG,CAACE,KAAV,EAAiBC,KAAjB,CAAuB,+DAAvB,CAAd;ACDF,AHZE,MGYEkB,UAAJ,EAAgB,KHZFjG,QAAZ,EAAsB;AEctB,ACDA,AHbsB,QEclB6E,OAAJ,EAAa;AACX,ACDH,aDCUG,UAAU,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;AACD,AFfG;AEgBL,ACDDoB,AHdM,EGcNA,OHdWhG,GGcD,GAAGkG,EHdP,GAAgB,KGcC,AHdjB,CGckB,YAAY;AAClC,AHdI,QGcAC,CHdKlG,IGcA,GAAGY,GHdR,GAAkB,CAAlB,CGcgB,AHjBE,CGiBDuF,AHdmB,gBGc5B,CAA0B,wBAA1B,CAAZ;ADEF,SAAO,GAAP;AACD,ACFG,AHdI,SGcC,AHdIlG,IGcA6B,CAAC,GAAG,CAAb,CHdI,CGcYA,CAAC,CHdK,EGcFoE,AHdhB,CAJkB,CAIkB,GGcf,CAACE,MAA1B,EAAkCtE,CAAC,EAAnC,EAAuC;AACrC,UAAIoD,MAAM,CAACJ,UAAP,CAAkBoB,KAAK,CAACpE,CAAD,CAAL,CAAS4D,IAA3B,MAAqCR,MAAM,CAACV,YAAP,EAAzC,EAAgE;ADGtE,ACFQY,AHfA,QGeAA,CDECN,AFjBI5E,QAAL,CGeU,CDElB,ACFmBgG,CDECnB,AFjBI,CAAhB,CALkB,CEsB1B,AFjB4C,CGepB,CDEC,ACFAjD,CAAD,CAAN,CAAV;ADGN,ACFK,SDEE,CAAC,KAAKiD,GAAN,EAAWC,OAAX,CAAmB,sEAAnB,EAA2F,IAA3F,IAAmG,GAA1G;AACD,ACFI,AHhBG,SAAK7E,UAAL,GAAkB,GAAlB,CANkB,CAMmB;AAErC;AEkBR8E,ACFIc,IAAAA,GDEG,CAACvB,MCFM,GAAG,GDEjB,CCFI,EDEmBD,kBAAvB;AACAU,ACFG,AHhBK,GGOiB,EASpB,EDEE,ACXkB,CDWjBH,ACXN,CHPW1E,SEkBb,AFlBQ,GEkBa0E,AFlBI,UEkBzB,QFlBQ;AGiBP,AHhBO,SAAKzE,YAAL,GAAoB,mBAApB;AACA,SAAKC,UAAL,GAAkB,mBAAlB;AGiBR+F,AHhBQ,MGgBF,CAACpB,EHhBM1E,KGgBb,GAAiByF,GHhBT,GAAmB,GGgB3B,iBHhBQ,CAZkB,CAclB;;AACA,SAAKxF,IAAL,GAAY,CAAZ;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,OAAL,GAAe,CAAf;AAEA,SAAKC,MAAL,GAAcC,QAAQ,CAACC,cAAT,CAAwBf,QAAxB,CAAd;AAEA,SAAKgB,KAAL,GAAa,KAAKH,MAAL,CAAYI,WAAzB;AACA,SAAKC,MAAL,GAAc,KAAKL,MAAL,CAAYM,YAA1B;AACA,SAAKN,MAAL,CAAYG,KAAZ,GAAoB,KAAKA,KAAzB,CAvBkB,CAuBsC;;AACxD,SAAKH,MAAL,CAAYK,MAAZ,GAAqB,KAAKA,MAA1B,CAxBkB,CAwBsC;;AAExD,SAAKE,SAAL,GAAiB,KAAKJ,KAAL,GAAa,KAAKL,OAAnC;AACA,SAAKU,UAAL,GAAkB,KAAKH,MAAL,GAAc,KAAKR,IAArC;AACA,SAAKY,MAAL,GAAc,KAAKF,SAAL,GAAiB,GAA/B,CA5BkB,CA4BsC;;AACxD,SAAKG,UAAL,GAAkB,KAAKH,SAAL,GAAiB,GAAnC,CA7BkB,CA6BsC;;AACxD,SAAKI,GAAL,GAAW,KAAKX,MAAL,CAAYY,UAAZ,CAAuB,IAAvB,CAAX;AAEA,SAAKC,UAAL,GAhCkB,CAkClB;;AACA,SAAKb,MAAL,CAAYc,gBAAZ,CAA6B,OAA7B,EAAsC,KAAKC,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAtC;AACA,SAAKhB,MAAL,CAAYc,gBAAZ,CAA6B,WAA7B,EAA0C,KAAKG,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAA1C;AACH;;;;iCAEY;AACT;AACA,UAAIE,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrB,OAAzB,EAAkCqB,CAAC,EAAnC,EAAuC;AACnC,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKvB,IAAzB,EAA+BuB,CAAC,EAAhC,EAAoC;AAChCF,UAAAA,SAAS,CAACG,IAAV,CAAe,IAAf;AACH;;AACD,aAAK/B,UAAL,CAAgB+B,IAAhB,CAAqBH,SAArB;AACAA,QAAAA,SAAS,GAAG,EAAZ;AACH,OATQ,CAWT;;;AACA,WAAKI,QAAL;AACH;;;0BAEKC,OAAO;AACT;AAEA,UAAIC,IAAI,GAAG,KAAKC,OAAL,CAAaF,KAAK,CAACG,OAAnB,EAA4BH,KAAK,CAACI,OAAlC,CAAX,CAHS,CAIT;;AACA,UAAIH,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAC,CAAhB,EAAmB;AACf;AACH,OAFD,MAEO;AACH;AACA,aAAKlC,UAAL,CAAgBkC,IAAI,CAAC,CAAD,CAApB,EAAyBA,IAAI,CAAC,CAAD,CAA7B,IAAoC,KAAKnC,UAAzC,CAFG,CAIH;;AACA,aAAKiC,QAAL,GALG,CAOH;;AACA,aAAKjC,UAAL,IAAmB,CAAnB,CARG,CAUH;;AACAmC,QAAAA,IAAI,GAAG,KAAKC,OAAL,CAAaF,KAAK,CAACG,OAAnB,EAA4BH,KAAK,CAACI,OAAlC,CAAP;AACA,aAAKC,QAAL,CAAcJ,IAAd,EAAoB,IAApB;AACH;AACJ;;;8BAESD,OAAO;AACb;AACA,UAAIM,IAAI,CAACC,GAAL,KAAa,KAAKvC,QAAlB,GAA6B,KAAKC,UAAtC,EAAkD;AAC9C;AACA,YAAIgC,IAAI,GAAG,KAAKC,OAAL,CAAaF,KAAK,CAACG,OAAnB,EAA4BH,KAAK,CAACI,OAAlC,CAAX,CAF8C,CAI9C;;AACA,YAAIH,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAC,CAAhB,EAAmB;AACf,eAAKF,QAAL;AACH,SAFD,CAGA;AAHA,aAIK;AACD,iBAAKA,QAAL;AACA,iBAAKM,QAAL,CAAcJ,IAAd,EAAoB,IAApB;AACH,WAZ6C,CAc9C;;;AACA,aAAKjC,QAAL,GAAgBsC,IAAI,CAACC,GAAL,EAAhB;AACH;AACJ;;;6BAEQN,MAA0B;AAAA,UAApBO,UAAoB,uEAAP,KAAO;AAC/B,UAAIC,OAAO,GAAIR,IAAI,CAAC,CAAD,CAAJ,GAAU,KAAKjB,SAAhB,GAA8B,KAAKA,SAAL,GAAiB,CAA7D;AACA,UAAI0B,OAAO,GAAIT,IAAI,CAAC,CAAD,CAAJ,GAAU,KAAKhB,UAAhB,GAA+B,KAAKA,UAAL,GAAkB,CAA/D,CAF+B,CAI/B;;AACA,UAAI,KAAKnB,UAAL,IAAmB,CAAvB,EAA0B;AACtB;AACA,aAAKsB,GAAL,CAASuB,SAAT,GAAqB,KAAKzC,SAA1B;AACH,OAHD,MAGO;AACH;AACA,aAAKkB,GAAL,CAASuB,SAAT,GAAqB,KAAKxC,YAA1B;AACH,OAX8B,CAa/B;;;AACA,WAAKiB,GAAL,CAASwB,SAAT;AACA,WAAKxB,GAAL,CAASyB,GAAT,CAAaJ,OAAb,EAAsBC,OAAtB,EAA+B,KAAKxB,MAApC,EAA4C,CAA5C,EAA+C,IAAI4B,IAAI,CAACC,EAAxD;AACA,WAAK3B,GAAL,CAAS4B,IAAT,GAhB+B,CAkB/B;;AACA,UAAIR,UAAJ,EAAgB;AACZ,aAAKpB,GAAL,CAASuB,SAAT,GAAqB,KAAKtC,WAA1B;AACA,aAAKe,GAAL,CAASwB,SAAT;AACA,aAAKxB,GAAL,CAASyB,GAAT,CAAaJ,OAAb,EAAsBC,OAAtB,EAA+B,KAAKvB,UAApC,EAAgD,CAAhD,EAAmD,IAAI2B,IAAI,CAACC,EAA5D;AACA,aAAK3B,GAAL,CAAS4B,IAAT;AACH;AACJ;;;8BAESC,GAAGC,GAAG;AACZ,aAAO,CAACJ,IAAI,CAACK,KAAL,CAAWF,CAAC,GAAG,KAAKjC,SAApB,CAAD,EAAiC8B,IAAI,CAACK,KAAL,CAAWD,CAAC,GAAG,KAAKjC,UAApB,CAAjC,CAAP;AACH;;;4BAEOgC,GAAGC,GAAG;AACV;AACA,UAAIjB,IAAI,GAAG,KAAKmB,SAAL,CAAeH,CAAf,EAAkBC,CAAlB,CAAX,CAFU,CAIV;;AACA,WAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKtB,IAAzB,EAA+BsB,CAAC,EAAhC,EAAoC;AAChC,YAAI,KAAK7B,UAAL,CAAgBkC,IAAI,CAAC,CAAD,CAApB,EAAyBL,CAAzB,MAAgC,IAApC,EAA0C;AACtC,iBAAO,CAACK,IAAI,CAAC,CAAD,CAAL,EAAUL,CAAC,GAAG,CAAd,CAAP;AACH;AACJ;;AACD,aAAO,CAACK,IAAI,CAAC,CAAD,CAAL,EAAU,KAAK3B,IAAL,GAAY,CAAtB,CAAP;AACH;;;+BAGU;AACP;AACA,WAAKc,GAAL,CAASuB,SAAT,GAAqB,KAAKvC,UAA1B;AACA,WAAKiD,SAAL,CAAe,KAAKjC,GAApB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,KAAKR,KAApC,EAA2C,KAAKE,MAAhD,EAAwD,EAAxD,EAA4D,IAA5D,EAAkE,KAAlE,EAHO,CAKP;;AACA,UAAImC,CAAC,GAAG,KAAKjC,SAAL,GAAiB,CAAzB,CANO,CAMqC;;AAC5C,UAAIkC,CAAC,GAAG,KAAKjC,UAAL,GAAkB,CAA1B,CAPO,CAOqC;;AAC5C,WAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrB,OAAzB,EAAkCqB,CAAC,EAAnC,EAAuC;AACnC,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKvB,IAAzB,EAA+BuB,CAAC,EAAhC,EAAoC;AAChC,cAAI,KAAK9B,UAAL,CAAgB6B,CAAhB,EAAmBC,CAAnB,KAAyB,CAA7B,EAAgC;AAC5B,iBAAKT,GAAL,CAASuB,SAAT,GAAqB,KAAKzC,SAA1B;AACH,WAFD,MAEO,IAAI,KAAKH,UAAL,CAAgB6B,CAAhB,EAAmBC,CAAnB,KAAyB,CAA7B,EAAgC;AACnC,iBAAKT,GAAL,CAASuB,SAAT,GAAqB,KAAKxC,YAA1B;AACH,WAFM,MAEA;AACH,iBAAKiB,GAAL,CAASuB,SAAT,GAAqB,KAAKtC,WAA1B;AACH;;AAED,eAAKe,GAAL,CAASwB,SAAT;AACA,eAAKxB,GAAL,CAASyB,GAAT,CAAaI,CAAb,EAAgBC,CAAhB,EAAmB,KAAKhC,MAAxB,EAAgC,CAAhC,EAAmC,IAAI4B,IAAI,CAACC,EAA5C;AACA,eAAK3B,GAAL,CAAS4B,IAAT;AAEAE,UAAAA,CAAC,GAAGA,CAAC,GAAG,KAAKjC,UAAb,CAbgC,CAaQ;AAC3C;;AACDiC,QAAAA,CAAC,GAAG,KAAKjC,UAAL,GAAkB,CAAtB,CAhBmC,CAgBS;;AAC5CgC,QAAAA,CAAC,GAAGA,CAAC,GAAG,KAAKjC,SAAb,CAjBmC,CAiBS;AAC/C;AACJ;;;8BAESI,KAAK6B,GAAGC,GAAGtC,OAAOE,QAAQI,QAAQ8B,MAAMM,QAAQ;AACtD,UAAI,OAAOA,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,QAAAA,MAAM,GAAG,IAAT;AACH;;AACD,UAAI,OAAOpC,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,QAAAA,MAAM,GAAG,CAAT;AACH;;AACD,UAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC5BA,QAAAA,MAAM,GAAG;AAAEqC,UAAAA,EAAE,EAAErC,MAAN;AAAcsC,UAAAA,EAAE,EAAEtC,MAAlB;AAA0BuC,UAAAA,EAAE,EAAEvC,MAA9B;AAAsCwC,UAAAA,EAAE,EAAExC;AAA1C,SAAT;AACH,OAFD,MAEO;AACH,YAAIyC,aAAa,GAAG;AAAEJ,UAAAA,EAAE,EAAE,CAAN;AAASC,UAAAA,EAAE,EAAE,CAAb;AAAgBC,UAAAA,EAAE,EAAE,CAApB;AAAuBC,UAAAA,EAAE,EAAE;AAA3B,SAApB;;AACA,aAAK,IAAIE,IAAT,IAAiBD,aAAjB,EAAgC;AAC5BzC,UAAAA,MAAM,CAAC0C,IAAD,CAAN,GAAe1C,MAAM,CAAC0C,IAAD,CAAN,IAAgBD,aAAa,CAACC,IAAD,CAA5C;AACH;AACJ;;AACDxC,MAAAA,GAAG,CAACwB,SAAJ;AACAxB,MAAAA,GAAG,CAACyC,MAAJ,CAAWZ,CAAC,GAAG/B,MAAM,CAACqC,EAAtB,EAA0BL,CAA1B;AACA9B,MAAAA,GAAG,CAAC0C,MAAJ,CAAWb,CAAC,GAAGrC,KAAJ,GAAYM,MAAM,CAACsC,EAA9B,EAAkCN,CAAlC;AACA9B,MAAAA,GAAG,CAAC2C,gBAAJ,CAAqBd,CAAC,GAAGrC,KAAzB,EAAgCsC,CAAhC,EAAmCD,CAAC,GAAGrC,KAAvC,EAA8CsC,CAAC,GAAGhC,MAAM,CAACsC,EAAzD;AACApC,MAAAA,GAAG,CAAC0C,MAAJ,CAAWb,CAAC,GAAGrC,KAAf,EAAsBsC,CAAC,GAAGpC,MAAJ,GAAaI,MAAM,CAACuC,EAA1C;AACArC,MAAAA,GAAG,CAAC2C,gBAAJ,CAAqBd,CAAC,GAAGrC,KAAzB,EAAgCsC,CAAC,GAAGpC,MAApC,EAA4CmC,CAAC,GAAGrC,KAAJ,GAAYM,MAAM,CAACuC,EAA/D,EAAmEP,CAAC,GAAGpC,MAAvE;AACAM,MAAAA,GAAG,CAAC0C,MAAJ,CAAWb,CAAC,GAAG/B,MAAM,CAACwC,EAAtB,EAA0BR,CAAC,GAAGpC,MAA9B;AACAM,MAAAA,GAAG,CAAC2C,gBAAJ,CAAqBd,CAArB,EAAwBC,CAAC,GAAGpC,MAA5B,EAAoCmC,CAApC,EAAuCC,CAAC,GAAGpC,MAAJ,GAAaI,MAAM,CAACwC,EAA3D;AACAtC,MAAAA,GAAG,CAAC0C,MAAJ,CAAWb,CAAX,EAAcC,CAAC,GAAGhC,MAAM,CAACqC,EAAzB;AACAnC,MAAAA,GAAG,CAAC2C,gBAAJ,CAAqBd,CAArB,EAAwBC,CAAxB,EAA2BD,CAAC,GAAG/B,MAAM,CAACqC,EAAtC,EAA0CL,CAA1C;AACA9B,MAAAA,GAAG,CAAC4C,SAAJ;;AACA,UAAIhB,IAAJ,EAAU;AACN5B,QAAAA,GAAG,CAAC4B,IAAJ;AACH;;AACD,UAAIM,MAAJ,EAAY;AACRlC,QAAAA,GAAG,CAACkC,MAAJ;AACH;AAEJ","file":"main.fb6bbcaf.js","sourceRoot":"..\\src","sourcesContent":["export class ConnectFour {\r\n    constructor(selector) {\r\n        // Game variables\r\n        this.gameOver = false;\r\n        this.playerTurn = 0;                // player 0 is red, player 1 is yellow\r\n        this.cellOwners = [];               // 2d array. Columns then rows\r\n        this.lastMove = 0;                  // user to keep track of refresh rate\r\n        this.updateTime = 100;               // How often mouseMovement can update in ms\r\n\r\n        // Colours\r\n        this.colourRed = 'rgb(240, 41, 41)';\r\n        this.colourYellow = 'rgb(240, 232, 10)';\r\n        this.colourBlue = 'rgb(44, 173, 242)';\r\n        this.colourBlank = 'rgb(255, 255, 255)';\r\n\r\n        // Drawing variables\r\n        this.rows = 6;\r\n        this.columns = 7;\r\n        this.connect = 4;\r\n\r\n        this.canvas = document.getElementById(selector);\r\n\r\n        this.width = this.canvas.scrollWidth;\r\n        this.height = this.canvas.scrollHeight;\r\n        this.canvas.width = this.width;                         // set canvas width to the same as the canvas element\r\n        this.canvas.height = this.height;                       // set canvas height to the same as the canvas element\r\n\r\n        this.cellWidth = this.width / this.columns;\r\n        this.cellHeight = this.height / this.rows;\r\n        this.radius = this.cellWidth / 2.6;                     // sets raius for full circle that scales with canvas\r\n        this.radiusSemi = this.cellWidth / 3.6;                 // sets radius for circle outline that scales with canvas\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        this.initialise();\r\n\r\n        // Event listeners\r\n        this.canvas.addEventListener('click', this.click.bind(this));\r\n        this.canvas.addEventListener('mousemove', this.mouseMove.bind(this));\r\n    }\r\n\r\n    initialise() {\r\n        // set all cell owners to null\r\n        let rowsArray = [];\r\n        for (let i = 0; i < this.columns; i++) {\r\n            for (let j = 0; j < this.rows; j++) {\r\n                rowsArray.push(null);\r\n            }\r\n            this.cellOwners.push(rowsArray);\r\n            rowsArray = [];\r\n        }\r\n\r\n        // draw grid\r\n        this.drawGrid();\r\n    }\r\n\r\n    click(event) {\r\n        // find the next available cell in the column\r\n\r\n        let cell = this.getCell(event.offsetX, event.offsetY);\r\n        // if the cell is full don't do anything\r\n        if (cell[1] == -1) {\r\n            return;\r\n        } else {\r\n            // add cell to player owner\r\n            this.cellOwners[cell[0]][cell[1]] = this.playerTurn;\r\n\r\n            // else draw a new grid with a full circle for the available cell in the column\r\n            this.drawGrid();\r\n\r\n            // toggle player turn\r\n            this.playerTurn ^= 1;\r\n\r\n            // add new circle preview to new available\r\n            cell = this.getCell(event.offsetX, event.offsetY);\r\n            this.drawCell(cell, true);\r\n        }\r\n    }\r\n\r\n    mouseMove(event) {\r\n        // limit mouseMove updates to \r\n        if (Date.now() - this.lastMove > this.updateTime) {\r\n            // find the next available cell in the column\r\n            let cell = this.getCell(event.offsetX, event.offsetY);\r\n\r\n            // if the cell is full don't draw grid without filling cell\r\n            if (cell[1] == -1) {\r\n                this.drawGrid();\r\n            }\r\n            // Else draw a new grid with a semi circle for the available cell in the column\r\n            else {\r\n                this.drawGrid();\r\n                this.drawCell(cell, true);\r\n            }\r\n\r\n            // reset last move\r\n            this.lastMove = Date.now();\r\n        }\r\n    }\r\n\r\n    drawCell(cell, semiCircle = false) {\r\n        let centerX = (cell[0] * this.cellWidth) + (this.cellWidth / 2);\r\n        let centerY = (cell[1] * this.cellHeight) + (this.cellHeight / 2);\r\n\r\n        // get player colour\r\n        if (this.playerTurn == 0) {\r\n            // red player\r\n            this.ctx.fillStyle = this.colourRed;\r\n        } else {\r\n            // yellow player\r\n            this.ctx.fillStyle = this.colourYellow;\r\n        }\r\n\r\n        // draw player colour circle\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(centerX, centerY, this.radius, 0, 2 * Math.PI);\r\n        this.ctx.fill();\r\n\r\n        // if preview circle then blank out center of full circle\r\n        if (semiCircle) {\r\n            this.ctx.fillStyle = this.colourBlank;\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(centerX, centerY, this.radiusSemi, 0, 2 * Math.PI);\r\n            this.ctx.fill();\r\n        }\r\n    }\r\n\r\n    checkCell(x, y) {\r\n        return [Math.trunc(x / this.cellWidth), Math.trunc(y / this.cellHeight)];\r\n    }\r\n\r\n    getCell(x, y) {\r\n        // get cell from mouse click\r\n        let cell = this.checkCell(x, y);\r\n\r\n        // find out which row is the bottom in the column and return that cell\r\n        for (let i = 0; i < this.rows; i++) {\r\n            if (this.cellOwners[cell[0]][i] !== null) {\r\n                return [cell[0], i - 1];\r\n            }\r\n        }\r\n        return [cell[0], this.rows - 1];\r\n    }\r\n\r\n\r\n    drawGrid() {\r\n        // create rounded rectange\r\n        this.ctx.fillStyle = this.colourBlue;\r\n        this.roundRect(this.ctx, 0, 0, this.width, this.height, 20, true, false)\r\n\r\n        // create grid of holes\r\n        let x = this.cellWidth / 2;                 // sets the initial x center position of the first hole\r\n        let y = this.cellHeight / 2;                // sets the initial y center position of the first hole\r\n        for (let i = 0; i < this.columns; i++) {\r\n            for (let j = 0; j < this.rows; j++) {\r\n                if (this.cellOwners[i][j] == 0) {\r\n                    this.ctx.fillStyle = this.colourRed;\r\n                } else if (this.cellOwners[i][j] == 1) {\r\n                    this.ctx.fillStyle = this.colourYellow;\r\n                } else {\r\n                    this.ctx.fillStyle = this.colourBlank;\r\n                }\r\n\r\n                this.ctx.beginPath();\r\n                this.ctx.arc(x, y, this.radius, 0, 2 * Math.PI);\r\n                this.ctx.fill();\r\n\r\n                y = y + this.cellHeight;                // increments the x center position for the next hole in the row\r\n            }\r\n            y = this.cellHeight / 2;                    // resets the x center position for the next column of holes\r\n            x = x + this.cellWidth;                     // increments the y center position for the next hole in the column\r\n        }\r\n    }\r\n\r\n    roundRect(ctx, x, y, width, height, radius, fill, stroke) {\r\n        if (typeof stroke === 'undefined') {\r\n            stroke = true;\r\n        }\r\n        if (typeof radius === 'undefined') {\r\n            radius = 5;\r\n        }\r\n        if (typeof radius === 'number') {\r\n            radius = { tl: radius, tr: radius, br: radius, bl: radius };\r\n        } else {\r\n            var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\r\n            for (var side in defaultRadius) {\r\n                radius[side] = radius[side] || defaultRadius[side];\r\n            }\r\n        }\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + radius.tl, y);\r\n        ctx.lineTo(x + width - radius.tr, y);\r\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n        ctx.lineTo(x + width, y + height - radius.br);\r\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\r\n        ctx.lineTo(x + radius.bl, y + height);\r\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n        ctx.lineTo(x, y + radius.tl);\r\n        ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n        ctx.closePath();\r\n        if (fill) {\r\n            ctx.fill();\r\n        }\r\n        if (stroke) {\r\n            ctx.stroke();\r\n        }\r\n\r\n    }\r\n\r\n}","console.log('Kia Ora');\r\n\r\nimport '../css/style.scss';\r\nimport { ConnectFour } from './ConnectFour.js';\r\n\r\n\r\nconst connectFour = new ConnectFour('connect-four');\r\n\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}