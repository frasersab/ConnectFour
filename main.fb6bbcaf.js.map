{"version":3,"sources":["js/ConnectFour.js","js/main.js","../node_modules/parcel/src/builtins/bundle-url.js","../node_modules/parcel/src/builtins/css-loader.js"],"names":["ConnectFour","selector","gameOver","playerTurn","cellOwners","lastMove","updateTime","colourRed","colourYellow","colourBlue","colourBlank","rows","columns","aspectRatio","connect","canvas","document","getElementById","ctx","getContext","width","scrollWidth","height","scrollHeight","cellWidth","cellHeight","radius","radiusSemi","initialise","addEventListener","click","bind","mouseMove","window","resizeGame","windowWidth","innerWidth","windowHeight","innerHeight","windowAspectRatio","drawGrid","rowsArray","i","j","push","event","cell","getCell","offsetX","offsetY","drawCell","Date","now","semiCircle","centerX","centerY","fillStyle","beginPath","arc","Math","PI","fill","x","y","trunc","checkCell","roundRect","stroke","tl","tr","br","bl","defaultRadius","side","moveTo","lineTo","quadraticCurveTo","closePath","console","log","connectFour","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","length","module"],"mappings":"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","file":"main.fb6bbcaf.js","sourceRoot":"..\\src","sourcesContent":["export class ConnectFour {\r\n    constructor(selector) {\r\n        // Game variables\r\n        this.gameOver = false;\r\n        this.playerTurn = 0;                // player 0 is red, player 1 is yellow\r\n        this.cellOwners = [];               // 2d array. Columns then rows\r\n        this.lastMove = 0;                  // user to keep track of refresh rate\r\n        this.updateTime = 100;              // How often mouseMovement can update in ms\r\n\r\n        // Colours\r\n        this.colourRed = 'rgb(240, 41, 41)';\r\n        this.colourYellow = 'rgb(240, 232, 10)';\r\n        this.colourBlue = 'rgb(44, 173, 242)';\r\n        this.colourBlank = 'rgb(255, 255, 255)';\r\n\r\n        // Drawing variables\r\n        this.rows = 6;\r\n        this.columns = 7;\r\n        this.aspectRatio = this.columns / this.rows;\r\n        this.connect = 4;                                       // number of pucks needed to algin to win\r\n\r\n        this.canvas = document.getElementById(selector);        // the canvas element\r\n        this.ctx = this.canvas.getContext('2d');                // the canvas context\r\n\r\n        this.width = this.canvas.scrollWidth;                   // setting the canvas elements width to a variable\r\n        this.height = this.canvas.scrollHeight;                 // setting the canvas elements height to a variable\r\n        this.canvas.width = this.width;                         // set canvas width to the same as the canvas element\r\n        this.canvas.height = this.height;                       // set canvas height to the same as the canvas element\r\n\r\n        this.cellWidth = this.width / this.columns;\r\n        this.cellHeight = this.height / this.rows;\r\n        this.radius = this.cellWidth / 2.6;                     // sets raius for full circle that scales with canvas\r\n        this.radiusSemi = this.cellWidth / 3.6;                 // sets radius for circle outline that scales with canvas\r\n\r\n        this.initialise();\r\n\r\n        // Event listeners\r\n        this.canvas.addEventListener('click', this.click.bind(this));\r\n        this.canvas.addEventListener('mousemove', this.mouseMove.bind(this));\r\n        window.addEventListener('resize', this.resizeGame.bind(this), false);\r\n        window.addEventListener('orientationchange', this.resizeGame.bind(this), false);\r\n    }\r\n\r\n    resizeGame() {\r\n        let windowWidth = window.innerWidth;\r\n        let windowHeight = window.innerHeight;\r\n        let windowAspectRatio = windowWidth / windowHeight;\r\n\r\n        if (windowAspectRatio > this.aspectRatio) {\r\n            this.canvas.height = windowHeight;\r\n            this.canvas.width = this.aspectRatio * windowHeight;\r\n\r\n        } else {\r\n            this.canvas.width = windowWidth;\r\n            this.canvas.height = windowWidth / this.aspectRatio;\r\n        }\r\n\r\n        // reset all drawing variables\r\n        this.width = this.canvas.scrollWidth;\r\n        this.height = this.canvas.scrollHeight;\r\n        this.canvas.width = this.width;                         // set canvas width to the same as the canvas element\r\n        this.canvas.height = this.height;                       // set canvas height to the same as the canvas element\r\n\r\n        this.cellWidth = this.width / this.columns;\r\n        this.cellHeight = this.height / this.rows;\r\n        this.radius = this.cellWidth / 2.6;                     // sets raius for full circle that scales with canvas\r\n        this.radiusSemi = this.cellWidth / 3.6;                 // sets radius for circle outline that scales with canvas\r\n\r\n        //\r\n        this.drawGrid();\r\n    }\r\n\r\n    initialise() {\r\n        // set all cell owners to null\r\n        let rowsArray = [];\r\n        for (let i = 0; i < this.columns; i++) {\r\n            for (let j = 0; j < this.rows; j++) {\r\n                rowsArray.push(null);\r\n            }\r\n            this.cellOwners.push(rowsArray);\r\n            rowsArray = [];\r\n        }\r\n\r\n        // size the game\r\n        this.resizeGame();\r\n\r\n    }\r\n\r\n    click(event) {\r\n        // find the next available cell in the column\r\n\r\n        let cell = this.getCell(event.offsetX, event.offsetY);\r\n        // if the cell is full don't do anything\r\n        if (cell[1] == -1) {\r\n            return;\r\n        } else {\r\n            // add cell to player owner\r\n            this.cellOwners[cell[0]][cell[1]] = this.playerTurn;\r\n\r\n            // else draw a new grid with a full circle for the available cell in the column\r\n            this.drawGrid();\r\n\r\n            // toggle player turn\r\n            this.playerTurn ^= 1;\r\n\r\n            // add new circle preview to new available\r\n            cell = this.getCell(event.offsetX, event.offsetY);\r\n            this.drawCell(cell, true);\r\n        }\r\n    }\r\n\r\n    mouseMove(event) {\r\n        // limit mouseMove updates to \r\n        if (Date.now() - this.lastMove > this.updateTime) {\r\n            // find the next available cell in the column\r\n            let cell = this.getCell(event.offsetX, event.offsetY);\r\n\r\n            // if the cell is full don't draw grid without filling cell\r\n            if (cell[1] == -1) {\r\n                this.drawGrid();\r\n            }\r\n            // Else draw a new grid with a semi circle for the available cell in the column\r\n            else {\r\n                this.drawGrid();\r\n                this.drawCell(cell, true);\r\n            }\r\n\r\n            // reset last move\r\n            this.lastMove = Date.now();\r\n        }\r\n    }\r\n\r\n    drawCell(cell, semiCircle = false) {\r\n        let centerX = (cell[0] * this.cellWidth) + (this.cellWidth / 2);\r\n        let centerY = (cell[1] * this.cellHeight) + (this.cellHeight / 2);\r\n\r\n        // get player colour\r\n        if (this.playerTurn == 0) {\r\n            // red player\r\n            this.ctx.fillStyle = this.colourRed;\r\n        } else {\r\n            // yellow player\r\n            this.ctx.fillStyle = this.colourYellow;\r\n        }\r\n\r\n        // draw player colour circle\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(centerX, centerY, this.radius, 0, 2 * Math.PI);\r\n        this.ctx.fill();\r\n\r\n        // if preview circle then blank out center of full circle\r\n        if (semiCircle) {\r\n            this.ctx.fillStyle = this.colourBlank;\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(centerX, centerY, this.radiusSemi, 0, 2 * Math.PI);\r\n            this.ctx.fill();\r\n        }\r\n    }\r\n\r\n    // find cell number from x,y position\r\n    checkCell(x, y) {\r\n        if (x == this.width) x--;       // handling edge case\r\n        if (y == this.height) y--;      // handling edge case\r\n        return [Math.trunc(x / this.cellWidth), Math.trunc(y / this.cellHeight)];\r\n    }\r\n\r\n    getCell(x, y) {\r\n        // get cell from mouse click\r\n        let cell = this.checkCell(x, y);\r\n\r\n        // find out which row is the bottom in the column and return that cell\r\n        for (let i = 0; i < this.rows; i++) {\r\n            if (this.cellOwners[cell[0]][i] !== null) {\r\n                return [cell[0], i - 1];\r\n            }\r\n        }\r\n        return [cell[0], this.rows - 1];\r\n    }\r\n\r\n    drawGrid() {\r\n        // create rounded rectange\r\n        this.ctx.fillStyle = this.colourBlue;\r\n        this.roundRect(this.ctx, 0, 0, this.width, this.height, this.radius, true, false)\r\n\r\n        // create grid of holes\r\n        let x = this.cellWidth / 2;                 // sets the initial x center position of the first hole\r\n        let y = this.cellHeight / 2;                // sets the initial y center position of the first hole\r\n        for (let i = 0; i < this.columns; i++) {\r\n            for (let j = 0; j < this.rows; j++) {\r\n                if (this.cellOwners[i][j] == 0) {\r\n                    this.ctx.fillStyle = this.colourRed;\r\n                } else if (this.cellOwners[i][j] == 1) {\r\n                    this.ctx.fillStyle = this.colourYellow;\r\n                } else {\r\n                    this.ctx.fillStyle = this.colourBlank;\r\n                }\r\n\r\n                this.ctx.beginPath();\r\n                this.ctx.arc(x, y, this.radius, 0, 2 * Math.PI);\r\n                this.ctx.fill();\r\n\r\n                y = y + this.cellHeight;                // increments the x center position for the next hole in the row\r\n            }\r\n            y = this.cellHeight / 2;                    // resets the x center position for the next column of holes\r\n            x = x + this.cellWidth;                     // increments the y center position for the next hole in the column\r\n        }\r\n    }\r\n\r\n\r\n\r\n    roundRect(ctx, x, y, width, height, radius, fill, stroke) {\r\n        if (typeof stroke === 'undefined') {\r\n            stroke = true;\r\n        }\r\n        if (typeof radius === 'undefined') {\r\n            radius = 5;\r\n        }\r\n        if (typeof radius === 'number') {\r\n            radius = { tl: radius, tr: radius, br: radius, bl: radius };\r\n        } else {\r\n            var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\r\n            for (var side in defaultRadius) {\r\n                radius[side] = radius[side] || defaultRadius[side];\r\n            }\r\n        }\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + radius.tl, y);\r\n        ctx.lineTo(x + width - radius.tr, y);\r\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n        ctx.lineTo(x + width, y + height - radius.br);\r\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\r\n        ctx.lineTo(x + radius.bl, y + height);\r\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n        ctx.lineTo(x, y + radius.tl);\r\n        ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n        ctx.closePath();\r\n        if (fill) {\r\n            ctx.fill();\r\n        }\r\n        if (stroke) {\r\n            ctx.stroke();\r\n        }\r\n\r\n    }\r\n\r\n}","console.log('Kia Ora');\r\n\r\nimport '../css/style.scss';\r\nimport { ConnectFour } from './ConnectFour.js';\r\n\r\n\r\nconst connectFour = new ConnectFour('connect-four');\r\n\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}